import numpy as np
import math
import matplotlib.pyplot as plt

# bit SNR in dB
X = [1, 1.5, 2, 2.5, 3]
# my SCL: the first row 50-errorblock; the rest 100-errorblock
L2 = [[0.45454545, 0.14577259, 2.108815e-2, 3.40182e-3, 2.8817e-4],
      [0.49504950, 0.13440860, 1.954270e-2, 2.42683e-3, 2.6519e-4],
      [0.41152263, 0.11600928, 1.998801e-2, 2.19135e-3, 2.7192e-4],
      [0.47619048, 0.12360939, 1.898614e-2, 2.45339e-3, 2.9315e-4],
      [0.46948357, 0.12269939, 2.102607e-2, 2.54868e-3, 2.7271e-4]]

L4 = [[0.31250000, 6.353240e-2, 9.81547e-3, 2.31503e-3, 2.7945e-4],
      [0.33557047, 9.216590e-2, 8.65726e-3, 1.73316e-3, 2.6112e-4],
      [0.31948882, 7.418398e-2, 8.36750e-3, 1.75211e-3, 2.9693e-4],
      [0.34482759, 7.057163e-2, 8.86211e-3, 1.55727e-3, 2.9694e-4],
      [0.3030303, 6.410256e-2, 1.181614e-2, 1.72369e-3, 2.6240e-4]]

L8 = [[0.22026432, 4.873294e-2, 8.52224e-3, 2.31750e-3, 2.7958e-4],
      [0.23255814, 4.810005e-2, 8.76885e-3, 1.51224e-3, 2.6149e-4],
      [0.22271715, 5.012531e-2,1.148501e-2, 1.56282e-3, 2.5623e-4],
      [0.26109661, 4.492363e-2, 7.75074e-3, 1.66058e-3, 2.7774e-4],
      [0.25641026, 4.416961e-2, 9.11328e-3, 1.86661e-3, 3.6586e-4]]

L16 = [[0.19531250, 3.987241e-2, 8.54993e-3, 2.34335e-3, 2.7958e-4],
       [0.18382353, 3.965107e-2, 7.88706e-3, 1.48164e-3, 2.9904e-4],
       [0.18867925, 3.359086e-2, 7.93651e-3, 1.32528e-3, 2.3362e-4],
       [0.20964361, 4.086637e-2, 7.79241e-3, 1.64263e-3, 3.0006e-4],
       [0.22172949, 3.435246e-2, 7.99297e-3, 1.64677e-3, 2.7226e-4]]

L32 = [[0.17985612, 3.793627e-2, 8.65052e-3, 2.34533e-3, 2.7958e-4],
       [0.14727541, 3.341129e-2, 8.13736e-3, 1.88797e-3, 3.0888e-4],
       [0.19047619, 4.089980e-2, 6.85824e-3, 2.09815e-3, 2.7534e-4],
       [0.16129032, 3.495281e-2, 8.90234e-3, 2.09582e-3, 3.0976e-4],
       [0.19607843, 3.602305e-2, 9.11494e-3, 1.65618e-3, 2.7070e-4]]
# Take average
l2 = []
for j in range(len(L2[0])):
    ave = 0
    for i in range(len(L2)):
        ave += L2[i][j]
    ave = ave / len(L2)
    l2.append(ave)
l4 = []
for j in range(len(L4[0])):
    ave = 0
    for i in range(len(L4)):
        ave += L4[i][j]
    ave = ave / len(L4)
    l4.append(ave)
l8 = []
for j in range(len(L8[0])):
    ave = 0
    for i in range(len(L8)):
        ave += L8[i][j]
    ave = ave / len(L8)
    l8.append(ave)
l16 = []
for j in range(len(L16[0])):
    ave = 0
    for i in range(len(L16)):
        ave += L16[i][j]
    ave = ave / len(L16)
    l16.append(ave)
l32 = []
for j in range(len(L32[0])):
    ave = 0
    for i in range(len(L32)):
        ave += L32[i][j]
    ave = ave / len(L32)
    l32.append(ave)
# ref from Po-Chung (error block = 50)
y2 = [0.424, 0.133, 0.0217, 0.00266, 0.00032]
y4 = [0.305, 0.0828, 0.00894, 0.00183, 0.00032]
y8 = [0.231, 0.0551, 0.00785, 0.0017, 0.00032]
y16 = [0.203, 0.0496, 0.00785, 0.0017, 0.00032]
y32 = [0.195, 0.0492, 0.00785, 0.0017, 0.00032]

plt.figure()
line0, = plt.plot(X, l2, 'ko-', markersize = 3, linewidth = 1)
line1, = plt.plot(X, l4, 'y^-', markersize = 4, linewidth = 1)
line2, = plt.plot(X, l8, 'bx-', markersize = 4, linewidth = 1)
line3, = plt.plot(X, l16, 'gv-', markersize = 4, linewidth = 1)
line4, = plt.plot(X, l32, 'r+-', markersize = 4, linewidth = 1)
plt.xlabel("BSNR (dB)")
plt.ylabel("BLER")
#plt.title("N = 1024  K = 512")
plt.grid('--', which='both', axis='both')
plt.yscale("log")
plt.xticks([1, 1.5, 2, 2.5, 3])
#plt.xlim([1, 3])
plt.legend((line0, line1, line2, line3, line4),
    ('L = 2', 'L = 4', 'L = 8', 'L = 16', 'L = 32'))
plt.show()

